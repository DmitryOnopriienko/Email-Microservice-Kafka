version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  elasticsearch:
    image: elasticsearch:8.6.1 # elasticsearch:7.17.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:9200/_cat/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    # volumes:
    # - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  kibana:
    image: kibana:8.6.1 # 7.17.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  email-microservice:
    build: .
    container_name: email-microservice
    ports:
      - "8080:8080"
    environment:
      elasticsearch.address: "elasticsearch:9200"
      spring.kafka.bootstrap-servers: "kafka:9092"
    depends_on:
      kibana:
        condition: service_started
      kafka:
        condition: service_started
      elasticsearch:
        condition: service_healthy